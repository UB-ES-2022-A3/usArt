# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Build and deploy Frontend WebApp to Development

on:
  push:
    branches:
      - development

env:
  AZURE_WEBAPP_NAME: usart-dev   # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './usArt_frontend'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '16.x'                # set this to the node version to use

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        ref: development
    - name: Replace URLs
      run: |
        sed -i -e 's#http://localhost:8000#https://usart-backend-dev.azurewebsites.net#g' ./usArt_frontend/src/components/LINK_BACKEND.jsx
        sed -i -e 's#ws://localhost:8000#ws://usart-backend-dev.azurewebsites.net#g' ./usArt_frontend/src/components/LINK_RESOURCES.jsx
        sed -i -e 's#http://localhost:3000#https://usart-dev.azurewebsites.net#g' ./usArt_frontend/src/components/LINK_FRONTEND.jsx
      continue-on-error: true
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: usArt_frontend/package-lock.json

    - name: npm install, build, and test
      run: |
        cd usArt_frontend
        npm install
        CI=false npm run build --if-present
    
    - name: Zip artifact for deployment
      run: zip release.zip ./usArt_frontend/* -r
      
    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: usart-dev
        path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'development'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: usart-dev
        
    - name: unzip artifact for deployment
      run: unzip release.zip
    
    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp 
      uses: azure/webapps-deploy@0b651ed7546ecfc75024011f76944cb9b381ef1e
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_DEV_2 }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
